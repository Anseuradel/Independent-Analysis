name: Auto-update Kaggle notebooks

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'  # runs every day at 6:00 UTC

jobs:
  update-notebooks:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: üîë Setup Kaggle credentials
        run: |
          # Create config directory with correct permissions
          mkdir -p ~/.kaggle
          echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json
          
          # Debug output
          echo "=== Kaggle config ==="
          cat ~/.kaggle/kaggle.json
          echo "=== File permissions ==="
          ls -la ~/.kaggle/
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install kaggle nbconvert ipykernel jq
          echo "=== Installed packages ==="
          pip list | grep -E 'kaggle|nbconvert'

      - name: üîÑ Validate credentials
        run: |
          # Verify credentials file exists
          echo "=== Credentials verification ==="
          [ -f ~/.kaggle/kaggle.json ] && echo "Credentials file exists" || echo "Missing credentials file"
          
          # Test direct API call
          echo "=== Testing API with curl ==="
          curl -s -H "Authorization: Bearer $(jq -r '.key' ~/.kaggle/kaggle.json)" \
            "https://www.kaggle.com/api/v1/competitions/list?page=1" | jq .
          
          # Test Kaggle CLI
          echo "=== Testing Kaggle CLI ==="
          python -m kaggle competitions list --page-size 1
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

      - name: üß† Download notebooks
        run: python scripts/download_notebooks.py

      - name: üìù Commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git diff --cached --quiet || (git commit -m "üìö Auto-update notebooks" && git push)
